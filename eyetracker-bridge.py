#!/usr/bin/python

"""
This script polls a log file generated by https://github.com/esdalmaijer/webcam-eyetracker,
wraps the data in an OSC Message intended for wekinator and forwards it to an OSC Server.

It requires 11 inputs in wekinator.
"""

import time
import subprocess
import select
import OSC
import argparse
import sys


def bridge(logfile, port, address, debug):
    #Connect to wekinator.  Should be ported to sendto, but its not working ATM due to an Attribute error
  c = OSC.OSCClient()
  c.connect((address, port))

  #Open the webcam-eyetracker file for tailing with polling
  f = subprocess.Popen(['tail','-F',logfile],\
          stdout=subprocess.PIPE,stderr=subprocess.PIPE)
  p = select.poll()
  p.register(f.stdout)

  #Poll the log file
  while True:
    #Send logs to wekinator  
    if p.poll(1):
        rawmsg = f.stdout.readline()
        if debug:
          print rawmsg
        arr = rawmsg.split(' ')
        oscmsg = OSC.OSCMessage()
        oscmsg.setAddress("/wek/inputs")

        #Try to convert the values to floats
        for val in arr:
          try:
            oscmsg.append( float(val) )
          except ValueError:
            if debug:
              print 'ValueError', val
            oscmsg.append( 0.0 )

        c.send(oscmsg)
    time.sleep(.01)


if __name__ == "__main__":
  
  # Get CLI arguments
  argparser = argparse.ArgumentParser()
  argparser.add_argument('-l', '--logfile', help='specifies output file for the WebcamTracker',
    type=str, default='./log.log', required=False)
  argparser.add_argument('-p', '--port',help='specifies port to send OSC data to, default 6448',
    type=int, default=6448, required=False)
  argparser.add_argument('-a', '--addr',help='address to send OSC data to, default 127.0.0.1',
    type=str, default='127.0.0.1', required=False)
  argparser.add_argument('--debug', help='if present, then all incoming messages are logged to stdout',
    action='store_true') 

  args = argparser.parse_args()

  bridge(args.logfile, args.port, args.addr, args.debug)